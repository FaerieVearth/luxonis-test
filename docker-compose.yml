version: "3"

services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pern_db}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - "5432:5432"
    networks:
      - db
    restart: unless-stopped
  db_manager:
    container_name: db_manager
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./db/db_manager:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      - db
    restart: unless-stopped
  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile.dev # on move to prod, update this
    volumes:
      - /server/node_modules
      - ./server:/server
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - db
      - client
    restart: unless-stopped
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.dev # on move to prod, update this
    volumes:
      - /client/node_modules
      - ./client:/client
    ports:
      - "8080:3000"
    networks:
      - client
    restart: unless-stopped
networks:
  client:
  db:
    driver: bridge
